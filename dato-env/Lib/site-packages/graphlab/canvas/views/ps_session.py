import graphlab.canvas.views.base
import graphlab.canvas.views.predservice


class PredictiveServiceList(graphlab.canvas.views.base.BaseView):
    def __init__(self, obj, params=None):
        super(PredictiveServiceList, self).__init__(obj, params)
        self.objectType = 'PredictiveServiceList'
        self.__child_views = {}
        self.objectType = 'PredictiveServices' # override default object type
        self.register_handler('get', 'get_ps_list', self.__get_ps_list)


    def get_metadata(self):
        data = {
            'pslistName' : 'Predictive Service'
        }
        return data

    def __get_ps_list(self, url, handler):
        handler.write({"list": self.__get_ps_table()})

    def __get_ps_table(self):
        pslist = self.obj.list() # returns a SFrame
        self.__child_views = {}
        ps_table = []
        for row in pslist:
            endpoint = row['State_path']
            name = row['Name']
            index = row['Index']
            ps_table.append({'Name': name, 'State_path': endpoint, 'Index': index})
            params = {
                'endpoint' : endpoint,
                'index' : index,
            }
            self.__child_views[name] = graphlab.canvas.views.predservice.PredictiveService(name, params=params)
        return ps_table


    def child_views(self):
        self.__get_ps_table()
        return self.__child_views

    def get_js_file(self):
        return 'ps_session'

    def get_temporary_name(self):
        return ('Predictive Services',)
